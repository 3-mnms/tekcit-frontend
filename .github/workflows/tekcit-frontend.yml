name: "🟢 tekcit-frontend – Docker Build & GitOps Dispatch (nginx-client only)"

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: tekcit-frontend-${{ github.ref_name }}
  cancel-in-progress: true

env:
  SERVICE: fe-user                                   # ← nginx-client에 해당
  IMAGE:   ${{ secrets.DOCKER_USERNAME }}/nginx-client    # ← 레지스트리 이미지명
  DEVOPS_REPO: 3-mnms/gitops-repo

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json

      - run: npm ci --prefer-offline --no-audit --no-fund
      - run: npm run build

      - name: ⏱️ Tag & Env
        run: |
          echo "TAG=v$(date -u +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
          if [ "${GITHUB_REF_NAME}" = "main" ]; then echo "ENV=prod" >> $GITHUB_ENV; else echo "ENV=develop" >> $GITHUB_ENV; fi

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          tags: |
            type=raw,value=${{ env.TAG }}
            type=sha
            type=raw,value=latest,enable=${{ github.ref_name == 'main' }}

      - uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Dispatch to GitOps
        uses: peter-evans/repository-dispatch@v3
        with:
          token:  ${{ secrets.GH_PAT }}
          repository: ${{ env.DEVOPS_REPO }}
          event-type: image-updated
          client-payload: |
            {
              "service": "${{ env.SERVICE }}",   // fe-user로 고정
              "image":   "${{ env.IMAGE }}",
              "tag":     "${{ env.TAG }}",
              "env":     "${{ env.ENV }}"
            }